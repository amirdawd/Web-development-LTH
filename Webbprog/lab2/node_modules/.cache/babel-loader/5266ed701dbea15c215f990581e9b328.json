{"ast":null,"code":"class Salad {\n  constructor() {\n    this.foundation = [];\n    this.protein = [];\n    this.extra = [];\n    this.dressing = [];\n  }\n\n  addFoundation(found) {\n    foundations.forEach(item => {\n      this.foundation.push(item);\n    });\n  }\n\n  addProtein(proteins) {\n    proteins.forEach(item => {\n      this.protein.push(item);\n    });\n  }\n\n  addExtras(extras) {\n    extras.forEach(item => {\n      this.extra.push(item);\n    });\n  }\n\n  addDressing(dressings) {\n    dressings.forEach(item => {\n      this.dressing.push(item);\n    });\n  }\n\n  remove(type, value) {\n    if (type === 'foundation') {\n      let index = this.foundation.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found  \" + this.foundation[0] + \"  End\");\n      } else {\n        this.foundation.splice(index, 1);\n      }\n    }\n\n    if (type === 'protein') {\n      let index = this.protein.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.protein.splice(index, 1);\n        console.log(\"Log: \" + index + \":: \" + this.protein);\n      }\n    }\n\n    if (type === 'extra') {\n      let index = this.extra.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.extra.splice(index, 1);\n      }\n    }\n\n    if (type === 'dressing') {\n      let index = this.dressing.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.dressing.splice(index, 1);\n      }\n    }\n  }\n\n  price() {\n    let imported = require(\"./inventory.ES6.js\");\n\n    const reducer = (prev, item) => prev + imported.inventory[item].price;\n\n    let priceFoundation = this.foundation.reduce(reducer, 0);\n    let priceExtra = this.extra.reduce(reducer, 0);\n    let priceProtein = this.protein.reduce(reducer, 0);\n    let priceDressing = this.dressing.reduce(reducer, 0);\n    let totalPrice = priceDressing + priceExtra + priceFoundation + priceProtein;\n    return totalPrice;\n  }\n\n}\n\nexport default Salad;","map":{"version":3,"sources":["/Users/Amir/Documents/Webbprog/lab2/src/Salad.js"],"names":["Salad","constructor","foundation","protein","extra","dressing","addFoundation","found","foundations","forEach","item","push","addProtein","proteins","addExtras","extras","addDressing","dressings","remove","type","value","index","indexOf","console","log","splice","price","imported","require","reducer","prev","inventory","priceFoundation","reduce","priceExtra","priceProtein","priceDressing","totalPrice"],"mappings":"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","sourcesContent":["class Salad {\n    constructor() {\n        this.foundation = [];\n        this.protein = [];\n        this.extra = [];\n        this.dressing = [];\n    }\n\n    addFoundation(found) {\n        foundations.forEach(item => {\n            this.foundation.push(item);\n        });\n    }\n    addProtein(proteins) {\n        proteins.forEach(item => {\n            this.protein.push(item);\n        });\n    }\n    addExtras(extras) {\n        extras.forEach(item => {\n            this.extra.push(item);\n        });\n    }\n    addDressing(dressings) {\n        dressings.forEach(item => {\n            this.dressing.push(item);\n        });\n    }\n    remove(type, value) {\n\n        if (type === 'foundation') {\n            let index = this.foundation.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found  \" + this.foundation[0] +  \"  End\");\n            }\n            else {\n                this.foundation.splice(index, 1);\n            }\n        }\n        if (type === 'protein') {\n            let index = this.protein.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.protein.splice(index, 1);\n                console.log(\"Log: \" + index + \":: \" + this.protein);\n            }\n\n        }\n        if (type === 'extra') {\n            let index = this.extra.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.extra.splice(index, 1);\n            }\n        }\n        if (type === 'dressing') {\n            let index = this.dressing.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.dressing.splice(index, 1);\n            }\n        }\n    }\n    \n    price() {\n        let imported = require(\"./inventory.ES6.js\");\n        const reducer = (prev, item) => prev + imported.inventory[item].price;\n        let priceFoundation = this.foundation.reduce(reducer, 0) ;\n        let priceExtra = this.extra.reduce(reducer, 0);\n        let priceProtein = this.protein.reduce(reducer, 0);\n        let priceDressing = this.dressing.reduce(reducer, 0);\n        let totalPrice = priceDressing + priceExtra + priceFoundation + priceProtein;\n        return totalPrice;\n    }\n}\nexport default Salad;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}