{"ast":null,"code":"import inventory from './inventory.ES6';\n\nclass Salad {\n  constructor() {\n    this.foundation = [];\n    this.protein = [];\n    this.extra = [];\n    this.dressing = [];\n  }\n\n  addFoundation(found) {\n    this.foundation.push(found);\n  }\n\n  addProtein(proteins) {\n    this.protein.push(proteins);\n  }\n\n  addExtras(extras) {\n    this.extra.push(extras);\n  }\n\n  addDressing(dressings) {\n    this.dressing.push(dressings);\n  }\n\n  remove(type, value) {\n    if (type === 'foundation') {\n      let index = this.foundation.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found  \" + this.foundation[0] + \"  End\");\n      } else {\n        this.foundation.splice(index, 1);\n      }\n    }\n\n    if (type === 'protein') {\n      let index = this.protein.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.protein.splice(index, 1);\n        console.log(\"Log: \" + index + \":: \" + this.protein);\n      }\n    }\n\n    if (type === 'extra') {\n      let index = this.extra.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.extra.splice(index, 1);\n      }\n    }\n\n    if (type === 'dressing') {\n      let index = this.dressing.indexOf(value);\n\n      if (index === -1) {\n        console.log(\"Object not found\");\n      } else {\n        this.dressing.splice(index, 1);\n      }\n    }\n  }\n\n  price() {\n    const reducer = (prev, item) => prev + inventory[item].price;\n\n    let priceFoundation = this.foundation.reduce(reducer, 0);\n    let priceExtra = this.extra.reduce(reducer, 0);\n    let priceProtein = this.protein.reduce(reducer, 0);\n    let priceDressing = this.dressing.reduce(reducer, 0);\n    let totalPrice = priceDressing + priceExtra + priceFoundation + priceProtein;\n    return totalPrice;\n  }\n\n}\n\nexport default Salad;","map":{"version":3,"sources":["/Users/Amir/Documents/Webbprog/lab2/src/Salad.js"],"names":["inventory","Salad","constructor","foundation","protein","extra","dressing","addFoundation","found","push","addProtein","proteins","addExtras","extras","addDressing","dressings","remove","type","value","index","indexOf","console","log","splice","price","reducer","prev","item","priceFoundation","reduce","priceExtra","priceProtein","priceDressing","totalPrice"],"mappings":"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","sourcesContent":["import inventory from './inventory.ES6';\n\nclass Salad {\n    constructor() {\n        this.foundation = [];\n        this.protein = [];\n        this.extra = [];\n        this.dressing = [];\n    }\n\n    addFoundation(found) {\n            this.foundation.push(found)\n    }\n    addProtein(proteins) {\n            this.protein.push(proteins)\n    }\n    addExtras(extras) {\n            this.extra.push(extras)\n    }\n    addDressing(dressings) {\n            this.dressing.push(dressings)\n    }\n    remove(type, value) {\n\n        if (type === 'foundation') {\n            let index = this.foundation.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found  \" + this.foundation[0] +  \"  End\");\n            }\n            else {\n                this.foundation.splice(index, 1);\n            }\n        }\n        if (type === 'protein') {\n            let index = this.protein.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.protein.splice(index, 1);\n                console.log(\"Log: \" + index + \":: \" + this.protein);\n            }\n\n        }\n        if (type === 'extra') {\n            let index = this.extra.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.extra.splice(index, 1);\n            }\n        }\n        if (type === 'dressing') {\n            let index = this.dressing.indexOf(value);\n            if (index === -1) {\n                console.log(\"Object not found\");\n            }\n            else {\n                this.dressing.splice(index, 1);\n            }\n        }\n    }\n    \n    price() {\n        const reducer = (prev, item) => prev + inventory[item].price;\n        let priceFoundation = this.foundation.reduce(reducer, 0) ;\n        let priceExtra = this.extra.reduce(reducer, 0);\n        let priceProtein = this.protein.reduce(reducer, 0);\n        let priceDressing = this.dressing.reduce(reducer, 0);\n        let totalPrice = priceDressing + priceExtra + priceFoundation + priceProtein;\n        return totalPrice;\n    }\n}\nexport default Salad;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}