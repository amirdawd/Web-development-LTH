{"ast":null,"code":"var _jsxFileName = \"/Users/Amir/Documents/Webbprog/lab2/src/ComposeSalad.js\";\nimport React, { Component } from 'react';\nimport Salad from './Salad';\nimport { Dropdown, Menu, Input } from 'semantic-ui-react';\n\nclass ComposeSalad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundations: [],\n      proteins: [],\n      extras: [],\n      dressings: [],\n      salads: [],\n      salad: new Salad()\n    };\n    this.handleChangeFoundation = this.handleChangeFoundation.bind(this);\n    this.handleChangeProtein = this.handleChangeProtein.bind(this);\n    this.handleChangeExtra = this.handleChangeExtra.bind(this);\n    this.handleChangeDressing = this.handleChangeDressing.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeFoundation(event) {\n    this.setState({\n      foundations: event.target.value\n    });\n    alert(event.target.value);\n  }\n\n  handleChangeProtein(event) {\n    let list = [...this.state.proteins];\n\n    if (event.target.checked) {\n      list.push(event.target.value);\n    } else {\n      list = list.filter(name => name !== event.target.value);\n    }\n\n    this.setState({\n      proteins: list\n    });\n  }\n\n  handleChangeExtra(event) {\n    let list = [];\n\n    if (event.target.checked) {\n      list.push(event.target.value);\n    } else {\n      list = list.filter(name => name !== event.target.value);\n    }\n\n    this.setState({\n      extras: list\n    });\n  }\n\n  handleChangeDressing(event) {\n    this.setState(state => ({\n      dressings: event.target.value\n    }));\n  }\n\n  handleSubmit() {\n    alert(\"hello!\");\n    this.buildSalad();\n  }\n\n  buildSalad() {\n    this.state.salad.addFoundation(this.state.foundations);\n    this.proteins.map(item => this.state.salad.addProtein(item));\n    this.extras.map(item => this.state.salad.addExtras(item));\n    this.dressings.map(item => this.state.salad.addDressing(item));\n  }\n\n  render() {\n    const inventory = this.props.inventory;\n    let foundations = Object.keys(inventory).filter(name => inventory[name].foundation);\n    let protein = Object.keys(inventory).filter(name1 => inventory[name1].protein);\n    let extra = Object.keys(inventory).filter(name2 => inventory[name2].extra);\n    let dressing = Object.keys(inventory).filter(name3 => inventory[name3].dressing);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: this.state.name,\n      onChange: this.handleChangeFoundation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, foundations.map(name => React.createElement(\"option\", {\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"  \", name, \" +\", inventory[name].price, \" kr\"))))), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"V\\xE4lj protein\"), React.createElement(\"form\", {\n      action: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, protein.map(name1 => React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      id: name1,\n      name: name1,\n      value: this.state.value,\n      onChange: this.handleChangeProtein,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      key: name1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, name1, \" + \", inventory[name1].price, \" kr \"), \" \"), \" \")))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"V\\xE4lj extra\"), React.createElement(\"form\", {\n      action: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, extra.map(name1 => React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      id: name1,\n      name: name1,\n      value: this.state.value,\n      onChange: this.handleChangeProtein,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      key: name1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, name1, \" + \", inventory[name1].price, \" kr\"), \" \"), \" \")))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"V\\xE4lj dressing\"), React.createElement(\"form\", {\n      action: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, dressing.map(name1 => React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      value: this.state.value,\n      onChange: this.handleChangeProtein,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      key: name1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, name1, \" + \", inventory[name1].price, \" kr \"), \" \"), \" \"))))), React.createElement(\"div\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"L\\xE4gg till order\"));\n  }\n\n}\n\nexport default ComposeSalad;","map":{"version":3,"sources":["/Users/Amir/Documents/Webbprog/lab2/src/ComposeSalad.js"],"names":["React","Component","Salad","Dropdown","Menu","Input","ComposeSalad","constructor","props","state","foundations","proteins","extras","dressings","salads","salad","handleChangeFoundation","bind","handleChangeProtein","handleChangeExtra","handleChangeDressing","handleSubmit","event","setState","target","value","alert","list","checked","push","filter","name","buildSalad","addFoundation","map","item","addProtein","addExtras","addDressing","render","inventory","Object","keys","foundation","protein","name1","extra","name2","dressing","name3","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Salad from './Salad';\nimport { Dropdown, Menu, Input } from 'semantic-ui-react'\nclass ComposeSalad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            foundations : [], \n            proteins :[] ,\n            extras  : [], \n            dressings : [], \n            salads : [], \n            salad : new Salad()\n        };\n        this.handleChangeFoundation = this.handleChangeFoundation.bind(this);\n        this.handleChangeProtein = this.handleChangeProtein.bind(this);\n        this.handleChangeExtra = this.handleChangeExtra.bind(this);\n        this.handleChangeDressing = this.handleChangeDressing.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n    handleChangeFoundation(event) {\n        this.setState({\n            foundations:event.target.value\n        \n        });\n          alert(event.target.value);\n\n      }\n    handleChangeProtein(event) {\n        let list = [...this.state.proteins];\n        if(event.target.checked){\n            list.push(event.target.value);\n        }\n        else{\n            list = list.filter(\n                name => (name !== event.target.value)\n            ); \n        }\n        this.setState({\n          proteins: list\n        });\n      }\n    handleChangeExtra(event) {\n        let list = [];\n        if(event.target.checked){\n            list.push(event.target.value);\n        }\n        else{\n            list = list.filter(\n                name => (name !== event.target.value)\n            ); \n        }\n        this.setState({\n          extras: list\n        });\n      }\n    handleChangeDressing(event) {\n        this.setState(state => ({\n          dressings: event.target.value\n        }));\n      }\n    handleSubmit(){\n        alert(\"hello!\")\n        this.buildSalad();\n    }\n    buildSalad(){\n        this.state.salad.addFoundation(this.state.foundations);\n        this.proteins.map(item => this.state.salad.addProtein(item));\n        this.extras.map(item => this.state.salad.addExtras(item));\n        this.dressings.map(item => this.state.salad.addDressing(item));\n    }\n\n    render() {\n        const inventory = this.props.inventory;\n        let foundations = Object.keys(inventory).filter(\n            name => (inventory[name].foundation)\n        );\n        let protein = Object.keys(inventory).filter(\n            name1 => inventory[name1].protein\n        );\n        let extra = Object.keys(inventory).filter(\n            name2 => inventory[name2].extra\n        );\n        let dressing = Object.keys(inventory).filter(\n            name3 => inventory[name3].dressing\n        );\n        return (\n            <div className=\"container\">\n                <React.Fragment>\n                <form \n                value={this.state.value}\n               \n                >\n                    <select name={this.state.name}  onChange = {this.handleChangeFoundation}>\n                    {foundations.map((name) =><option value={name}>  {name} +{inventory[name].price} kr</option> )}\n                    </select>\n                    </form>\n               \n                </React.Fragment>\n                <React.Fragment>\n                <h2>Välj protein</h2>\n                <form action=\"#\">\n                <p>\n                {protein.map(name1 => <ul><label>\n                <input type=\"checkbox\"\n                    class=\"form-check-input\"\n                    id={name1}\n                    name={name1}\n                    value = {this.state.value}\n                    onChange = {this.handleChangeProtein}\n    \n                />\n                <li key={name1}>{name1} + {inventory[name1].price} kr </li> </label> </ul>)}\n                </p>\n                </form>\n                <h3>Välj extra</h3>\n                <form action=\"#\">\n                <p>\n                {extra.map(name1 => <ul><label>\n                <input type=\"checkbox\"\n                    class=\"form-check-input\"\n                    id={name1}\n                    name={name1}\n                    value = {this.state.value}\n                    onChange = {this.handleChangeProtein}\n                />\n                <li key={name1}>{name1} + {inventory[name1].price} kr</li> </label> </ul>)}\n                </p>\n                </form>\n                <h4>Välj dressing</h4>\n                <form action=\"#\">\n                <p>\n                {dressing.map(name1 => <ul><label>\n                <input type=\"checkbox\"\n                    class=\"form-check-input\"\n                    value = {this.state.value}\n                    onChange = {this.handleChangeProtein}\n                />\n                <li key={name1}>{name1} + {inventory[name1].price} kr </li> </label> </ul>)}\n                </p>\n                </form>\n                \n                </React.Fragment>\n                <div type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\" \n                  onClick={this.handleSubmit} >\n                        Lägg till order\n                </div>  \n            </div>\n            \n        );\n    }\n}\nexport default ComposeSalad;"]},"metadata":{},"sourceType":"module"}