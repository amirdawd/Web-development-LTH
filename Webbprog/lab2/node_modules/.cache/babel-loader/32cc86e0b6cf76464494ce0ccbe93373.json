{"ast":null,"code":"let inventory = {\n  Sallad: {\n    price: 10,\n    foundation: true,\n    vegan: true\n  },\n  Pasta: {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Pasta': {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Matvete': {\n    price: 10,\n    foundation: true,\n    vegan: true,\n    gluten: true\n  },\n  'Sallad + Glasnudlar': {\n    price: 10,\n    foundation: true,\n    gluten: true\n  },\n  'Sallad + Quinoa': {\n    price: 10,\n    foundation: true,\n    vegan: true\n  },\n  'Kycklingfilé': {\n    price: 10,\n    protein: true\n  },\n  'Rökt kalkonfilé': {\n    price: 10,\n    protein: true\n  },\n  'Norsk fjordlax': {\n    price: 30,\n    protein: true\n  },\n  'Handskalade räkor från Smögen': {\n    price: 40,\n    protein: true\n  },\n  'Pulled beef från Sverige': {\n    price: 15,\n    protein: true\n  },\n  'Marinerad bönmix': {\n    price: 10,\n    protein: true,\n    vegan: true\n  },\n  Avocado: {\n    price: 10,\n    extra: true,\n    vegan: true\n  },\n  Bacon: {\n    price: 10,\n    extra: true\n  },\n  'Böngroddar': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Cashewnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Chèvreost': {\n    price: 15,\n    extra: true,\n    lactose: true\n  },\n  Fetaost: {\n    price: 5,\n    extra: true,\n    lactose: true\n  },\n  'Färsk koriander': {\n    price: 10,\n    extra: true,\n    vegan: true\n  },\n  Gurka: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Inlagd lök': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Jalapeno: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Krossade jordnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Krutonger: {\n    price: 5,\n    extra: true,\n    gluten: true\n  },\n  'Körsbärstomater': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Lime: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Majs: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Oliver: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Paprika: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Parmesan: {\n    price: 5,\n    extra: true,\n    lactose: true\n  },\n  'Rivna morötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Rostade sesamfrön': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Ruccola: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Rödlök': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Sojabönor': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Soltorkad tomat': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  Tomat: {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Valnötter': {\n    price: 5,\n    extra: true,\n    vegan: true\n  },\n  'Ägg': {\n    price: 5,\n    extra: true\n  },\n  Ceasardressing: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  Dillmayo: {\n    price: 5,\n    dressing: true\n  },\n  Honungsdijon: {\n    price: 5,\n    dressing: true,\n    vegan: true\n  },\n  Kimchimayo: {\n    price: 5,\n    dressing: true\n  },\n  Pesto: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  Rhodeisland: {\n    price: 5,\n    dressing: true,\n    lactose: true\n  },\n  'Rostad aioli': {\n    price: 5,\n    dressing: true\n  },\n  'Soyavinägrett': {\n    price: 5,\n    dressing: true,\n    vegan: true\n  },\n  'Örtvinägrett': {\n    price: 5,\n    dressing: true,\n    vegan: true\n  }\n}; // recursively freeze the data structure.\n\n(function () {\n  deepFreeze(inventory);\n\n  function deepFreeze(obj) {\n    Object.keys(obj).map(prop => deepFreeze(obj[prop]));\n    Object.freeze(obj);\n  }\n})();\n\nexport default inventory;","map":{"version":3,"sources":["/Users/Amir/Documents/Webbprog/lab2/src/inventory.ES6.js"],"names":["inventory","Sallad","price","foundation","vegan","Pasta","gluten","protein","Avocado","extra","Bacon","lactose","Fetaost","Gurka","Jalapeno","Krutonger","Lime","Majs","Oliver","Paprika","Parmesan","Ruccola","Tomat","Ceasardressing","dressing","Dillmayo","Honungsdijon","Kimchimayo","Pesto","Rhodeisland","deepFreeze","obj","Object","keys","map","prop","freeze"],"mappings":"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","sourcesContent":["let inventory = {\n  Sallad: {price: 10, foundation: true, vegan: true},\n  Pasta: {price: 10, foundation: true, gluten: true},\n  'Sallad + Pasta': {price: 10, foundation: true, gluten: true},\n  'Sallad + Matvete': {price: 10, foundation: true, vegan: true, gluten: true},\n  'Sallad + Glasnudlar': {price: 10, foundation: true, gluten: true},\n  'Sallad + Quinoa': {price: 10, foundation: true, vegan: true},\n\n  'Kycklingfilé': {price: 10, protein: true},\n  'Rökt kalkonfilé': {price: 10, protein: true},\n  'Norsk fjordlax': {price: 30, protein: true},\n  'Handskalade räkor från Smögen': {price: 40, protein: true},\n  'Pulled beef från Sverige': {price: 15, protein: true},\n  'Marinerad bönmix': {price: 10, protein: true, vegan: true},\n\n  Avocado: {price: 10, extra: true, vegan: true},\n  Bacon: {price: 10, extra: true},\n  'Böngroddar': {price: 5, extra: true, vegan: true},\n  'Cashewnötter': {price: 5, extra: true, vegan: true},\n  'Chèvreost': {price: 15, extra: true, lactose: true},\n  Fetaost: {price: 5, extra: true, lactose: true},\n  'Färsk koriander': {price: 10, extra: true, vegan: true},\n  Gurka: {price: 5, extra: true, vegan: true},\n  'Inlagd lök': {price: 5, extra: true, vegan: true},\n  Jalapeno: {price: 5, extra: true, vegan: true},\n  'Krossade jordnötter': {price: 5, extra: true, vegan: true},\n  Krutonger: {price: 5, extra: true, gluten: true},\n  'Körsbärstomater': {price: 5, extra: true, vegan: true},\n  Lime: {price: 5, extra: true, vegan: true},\n  Majs: {price: 5, extra: true, vegan: true},\n  Oliver: {price: 5, extra: true, vegan: true},\n  Paprika: {price: 5, extra: true, vegan: true},\n  Parmesan: {price: 5, extra: true, lactose: true},\n  'Rivna morötter': {price: 5, extra: true, vegan: true},\n  'Rostade sesamfrön': {price: 5, extra: true, vegan: true},\n  Ruccola: {price: 5, extra: true, vegan: true},\n  'Rödlök': {price: 5, extra: true, vegan: true},\n  'Sojabönor': {price: 5, extra: true, vegan: true},\n  'Soltorkad tomat': {price: 5, extra: true, vegan: true},\n  Tomat: {price: 5, extra: true, vegan: true},\n  'Valnötter': {price: 5, extra: true, vegan: true},\n  'Ägg': {price: 5, extra: true},\n\n  Ceasardressing: {price: 5, dressing: true, lactose: true},\n  Dillmayo: {price: 5, dressing: true},\n  Honungsdijon: {price: 5, dressing: true, vegan: true},\n  Kimchimayo: {price: 5, dressing: true},\n  Pesto: {price: 5, dressing: true, lactose: true},\n  Rhodeisland: {price: 5, dressing: true, lactose: true},\n  'Rostad aioli': {price: 5, dressing: true},\n  'Soyavinägrett': {price: 5, dressing: true, vegan: true},\n  'Örtvinägrett': {price: 5, dressing: true, vegan: true},\n};\n\n// recursively freeze the data structure.\n(function() {\n  deepFreeze(inventory);\n  function deepFreeze(obj) {\n      Object.keys(obj).map(prop => deepFreeze(obj[prop]));\n      Object.freeze(obj);\n  }\n})();\n\nexport default inventory;\n"]},"metadata":{},"sourceType":"module"}